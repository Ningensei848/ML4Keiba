name: Deploy to AWS Lambda
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
    paths:
      - 'data/turtle/**'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  Deploy-to-AWS-Lambda:
    runs-on: ubuntu-latest
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2

      - name: install AWS SAM CLI
        run: |
          curl -OL https://github.com/aws/aws-sam-cli/releases/latest/download/aws-sam-cli-linux-x86_64.zip
          unzip aws-sam-cli-linux-x86_64.zip -d sam-installation
          sudo ./sam-installation/install
          sam --version

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # ttl をまとめて，dump.ttl として出力
      - name: Combine turtle files
        run: |
          pip install tqdm
          python dump.py

      # oxigraph-sparql-api-serverlessでコンパイルする
      - name: Clone repository
        run: |
          git clone https://github.com/uedayou/oxigraph-sparql-api-serverless.git --recursive
          mv dump.ttl oxigraph-sparql-api-serverless/rdf/dump.ttl 

      # pull docker image from dockerhub and compile
      - name: compile
        run: |
          docker pull ningensei848/oxigraph-sparql-api-serverless:latest
          docker container run --rm -v $PWD:/code -v $HOME/.cargo/registry:/root/.cargo/registry -v $HOME/.cargo/git:/root/.cargo/git ningensei848/oxigraph-sparql-api-serverless
        working-directory: oxigraph-sparql-api-serverless

      - name: Finally, deploy to lambda by AWS SAM CLI
        run: |
          sam package --template-file template.yaml --output-template-file packaged.yaml --s3-bucket $AWS_BUCKET_NAME --region $AWS_REGION
          sam deploy --template-file packaged.yaml --stack-name ML4Keiba --capabilities CAPABILITY_IAM --region $AWS_REGION
        env:
          AWS_REGION: ${{ secrets.AWS_REGION }}
          AWS_BUCKET_NAME: ${{ secrets.AWS_BUCKET_NAME }}
        working-directory: oxigraph-sparql-api-serverless
